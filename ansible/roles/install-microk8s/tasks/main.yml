---
- name: Update and upgrade apt packages
  ansible.builtin.apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400

- name: Set worker node 0 hostname
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[groups['worker-node'][0]]['ansible_default_ipv4']['address'] }} {{ groups['worker-node'][0] }}"
  when: "group_names[0] == 'controller-node'"

- name: Set worker node 1 hostname
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[groups['worker-node'][1]]['ansible_default_ipv4']['address'] }} {{ groups['worker-node'][1] }}"
  when: "group_names[0] == 'controller-node'"

- name: Set controller node hostname
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[groups['controller-node'][0]]['ansible_default_ipv4']['address'] }} {{ groups['controller-node'][0] }}"
  when: "group_names[0] == 'worker-node'"

- name: Set worker node 0 hostname
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[groups['worker-node'][0]]['ansible_default_ipv4']['address'] }} {{ groups['worker-node'][0] }}"
  when: "inventory_hostname == groups['worker-node'][1]"

- name: Set worker node 1 hostname
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[groups['worker-node'][1]]['ansible_default_ipv4']['address'] }} {{ groups['worker-node'][1] }}"
  when: "inventory_hostname == groups['worker-node'][0]"

- name: Install general networking utilities
  ansible.builtin.apt:
    pkg:
      - dnsutils #dig
      - net-tools #ifconfig, nslookup
      - nmap #scan open ports
      - traceroute #needed for network degbugging
      - netcat #needed to test connection to hosts
      - python3
      - python3-pip

- name: Edit boot file
  ansible.builtin.lineinfile:
    path: /boot/firmware/cmdline.txt
    line: cgroup_enable=memory cgroup_memory=1

- name: Check if microK8s is installed
  ansible.builtin.shell:
    cmd: microk8s version
  register: microk8s_check
  ignore_errors: True
  
- name: Reboot and wait for restart
  ansible.builtin.reboot:
    reboot_timeout: 3600
  when: microk8s_check.rc != 0

- name: Install extra kernal modules
  ansible.builtin.apt:
    name: linux-modules-extra-raspi
    state: present
  when: microk8s_check.rc != 0

- name: Install microK8s
  ansible.builtin.shell:
    cmd: snap install microk8s --classic --channel=1.25
  when: microk8s_check.rc != 0