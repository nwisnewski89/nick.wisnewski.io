name: Main merge workflow

on:
  push:
    branches:
      - main

permissions:
  pull-requests: write
  contents: write

jobs:
  rebase:
    runs-on: ubuntu-latest
    steps:
      - uses: jimbloemkolk/auto-rebase@v0.1.0
        with:
          github_token: ${{ github.token }}

  set-build-manifest:
    uses: ./.github/workflows/build-manifest.yml
    
  build-site:
    needs: set-build-manifest
    if: ${{ needs.set-build-manifest.outputs.build-site == 'true' }}
    uses: ./.github/workflows/build-image.yml
    with:
      image-name: nick-wisnewski-io
      dockerfile: docker/site/Dockerfile
      tag: "v${{ github.run_number }}"
    secrets: inherit

  build-ingress:
    needs: set-build-manifest
    if: ${{ needs.set-build-manifest.outputs.build-ingress == 'true' }}
    uses: ./.github/workflows/build-image.yml
    with:
      image-name: ingress-server
      dockerfile: docker/ingress-server/Dockerfile
      tag: "v${{ github.run_number }}"
    secrets: inherit

  deploy-site:
    needs: [set-build-manifest, build-site, build-ingress]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
    steps:
      - uses: actions/checkout@v4

      - name: GCP site resources apply plan
        if: ${{ needs.set-build-manifest.outputs.deploy-site-resources == 'true' }}
        uses: dflook/terraform-apply@v1
        with:
          path: terraform/modules/site-resources
          variables: |
              project_id      = "${{ secrets.PROJECT_ID }}"
              region          = "${{ secrets.REGION }}"
              zone            = "${{ secrets.ZONE }}"
              subnetwork_cidr = "${{ secrets.SUBNET_CIDR }}"
              pods_cidr       = "${{ secrets.PODS_CIDR }}"
              services_cidr   = "${{ secrets.SERVICES_CIDR }}"

      - name: K8s resources apply plan
        if: ${{ needs.set-build-manifest.outputs.deploy-k8s-resources == 'true' }}
        uses: dflook/terraform-apply@v1
        with:
          path: terraform/modules/k8s-resources
          variables: |
              project_id      = "${{ secrets.PROJECT_ID }}"
              region          = "${{ secrets.REGION }}"

      - name: Install kubectl
        if: ${{ needs.set-build-manifest.outputs.build-site == 'true' || needs.set-build-manifest.outputs.build-ingress == 'true' }}
        id: kubectl
        uses: azure/setup-kubectl@v3

      - name: Authenticate to GCP
        if: ${{ needs.set-build-manifest.outputs.build-site == 'true' || needs.set-build-manifest.outputs.build-ingress == 'true' }}
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Authenticate to GKE
        if: ${{ needs.set-build-manifest.outputs.build-site == 'true' || needs.set-build-manifest.outputs.build-ingress == 'true' }}
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: wisnewski-k8s-cluster-prod 
          location: ${{ secrets.REGION }}

      - name: Restart site deployment
        if: ${{ needs.set-build-manifest.outputs.build-site == 'true' }}
        run: |
          ${KUBECTL_PATH} scale deployment site --replicas=0 -n wisnewski-io 
          ${KUBECTL_PATH} scale deployment site --replicas=1 -n wisnewski-io
        env:
          KUBECTL_PATH: ${{ steps.kubectl.outputs.kubectl-path }}

      - name: Restart ingress-server deployment
        if: ${{ needs.set-build-manifest.outputs.build-ingress == 'true' }}
        run: |
          ${KUBECTL_PATH} scale deployment ingress-server --replicas=0 -n wisnewski-io
          ${KUBECTL_PATH} scale deployment ingress-server --replicas=1 -n wisnewski-io
        env:
          KUBECTL_PATH: ${{ steps.kubectl.outputs.kubectl-path }}


  